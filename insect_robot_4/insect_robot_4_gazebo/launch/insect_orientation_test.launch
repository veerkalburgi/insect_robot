<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find insect_robot_4_gazebo)/world/insect.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

    <group ns="insect">
      <param name="robot_description"
        command="$(find xacro)/xacro.py
        $(find insect_robot_4_description)/urdf/insect.urdf.xacro"/>

      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model insect -param robot_description"/>

      <!-- Load joint controller configurations from YAML file to parameter server -->
      <rosparam file="$(find insect_robot_4_control)/config/insect_control.yaml" command="load"/>

      <!-- load the controllers -->
      <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller
                                        l_f_hip_joint_position_controller
                                        r_f_hip_joint_position_controller
                                        l_b_hip_joint_position_controller
                                        r_b_hip_joint_position_controller
                                        l_f_limb_joint_position_controller
                                        r_f_limb_joint_position_controller
                                        l_b_limb_joint_position_controller
                                        r_b_limb_joint_position_controller"/>

      <!-- convert joint states to TF transforms for rviz, etc -->
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
        <remap from="/joint_states" to="/insect/joint_states" />
      </node>

      <node name="rpy_pub_node" pkg="insect_robot_4_control" type="rpy_pub.py" respawn="true"/>
      <!--node name="sbc_node" pkg="insect_robot_4_control" type="self_balance_control.py" respawn="true"/-->
    </group>

    





</launch>
